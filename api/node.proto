syntax = "proto3";

package api;

// for grpc-gateway
import "google/api/annotations.proto";
import "common.proto";

// Node is the service managing the nodes.
service Node {
    // Create creates the given node.
    rpc Create(CreateNodeRequest) returns (CreateNodeResponse) {
        option(google.api.http) = {
            post: "/api/applications/{applicationName}/nodes"
            body: "*"
        };
    }

    // Get returns the node for the requested name.
    rpc Get(GetNodeRequest) returns (GetNodeResponse) {
        option (google.api.http) = {
            get: "/api/applications/{applicationName}/nodes/{nodeName}"
        };
    }

    // Delete deletes the node matching the given name.
    rpc Delete(DeleteNodeRequest) returns (DeleteNodeResponse) {
        option (google.api.http) = {
            delete: "/api/applications/{applicationName}/nodes/{nodeName}"
        };
    }

    // List lists the nodes.
    rpc List(ListNodeRequest) returns (ListNodeResponse) {
        option (google.api.http) = {
            get: "/api/applications/{applicationName}/nodes"
        };
    }

    // Update updates the node matching the given name.
    rpc Update(UpdateNodeRequest) returns (UpdateNodeResponse) {
        option (google.api.http) = {
            put: "/api/applications/{applicationName}/nodes/{nodeName}"
            body: "*"
        };
    }
}

message CreateNodeRequest {
	// Name of the application to which the node must be added.
	string applicationName = 13;

    // Hex encoded DevEUI.
    string devEUI = 1; 

    // Hex encoded AppEUI.
    string appEUI = 2; 

    // Hex encoded AppKey.
    string appKey = 3; 

	// RX delay.
    uint32 rxDelay = 4;

	// RX1 data-rate offset.
    uint32 rx1DROffset = 5;

	// Channel-list ID used for CFlist (see LoRaWAN regional parameters if this applies to your region).
    int64 channelListID = 6;

	// RX window to use.
    RXWindow rxWindow = 7;

	// Data-rate to use for RX2.
    uint32 rx2DR = 8;

	// Name of the node (if left blank, it will be set to the DevEUI).
    string name = 9;

	// Relax frame-counter mode is enabled.
	bool relaxFCnt = 10;

	// Interval (in frames) in which the ADR engine may adapt the data-rate of the node (0 = disabled).
	uint32 adrInterval = 11;

	// Installation-margin to use for ADR calculation.
	double installationMargin = 12;

	// Description of the node.
	string description = 14;

	// Node is activated by ABP.
	bool isABP = 15;
}

message CreateNodeResponse {}

message GetNodeRequest {
	// Name of the application owning the node.
	string applicationName = 2;

    // Name of the node.
    string nodeName = 1;
}

message GetNodeResponse {
    // Hex encoded DevEUI.
    string devEUI = 1; 

    // Hex encoded AppEUI.
    string appEUI = 2; 

    // Hex encoded AppKey.
    string appKey = 3; 

	// RX delay.
    uint32 rxDelay = 4;

	// RX1 data-rate offset.
    uint32 rx1DROffset = 5;

	// Channel-list ID used for CFlist (see LoRaWAN regional parameters if this applies to your region).
    int64 channelListID = 6;

	// RX window to use.
    RXWindow rxWindow = 7;

	// Data-rate to use for RX2.
    uint32 rx2DR = 8;

	// Name of the node.
    string name = 9;

	// Relax frame-counter mode is enabled.
	bool relaxFCnt = 10;

	// Interval (in frames) in which the ADR engine may adapt the data-rate of the node (0 = disabled).
	uint32 adrInterval = 11;

	// Installation-margin to use for ADR calculation.
	double installationMargin = 12;

	// Description of the node.
	string description = 13;

	// Node is activated by ABP.
	bool isABP = 14;
};

message DeleteNodeRequest {
	// Name of the application owning the node.
	string applicationName = 2;

    // Name of the node.
    string nodeName = 1;
}

message DeleteNodeResponse {}

message ListNodeRequest {
	// Name of the application owning the node.
	string applicationName = 3;

	// Max number of nodes to return in the result-set.
    int64 limit = 1;

	// Offset of the result-set (for pagination).
    int64 offset = 2;
}

message ListNodeResponse {
	// Total number of nodes available within the result-set.
    int64 totalCount = 1;

	// Nodes within this result-set.
    repeated GetNodeResponse result = 2;
}


message UpdateNodeRequest {
	// Name of the application owning the node.
	string applicationName = 13;

    // Name of the node to update.
	string nodeName = 14;

    // Hex encoded AppEUI.
    string appEUI = 2;

    // Hex encoded AppKey.
    string appKey = 3;

	// RX delay.
    uint32 rxDelay = 4;

	// RX1 data-rate offset.
    uint32 rx1DROffset = 5;

	// Channel-list ID used for CFlist (see LoRaWAN regional parameters if this applies to your region).
    int64 channelListID = 6;

	// RX window to use.
    RXWindow rxWindow = 7;

	// Data-rate to use for RX2.
    uint32 rx2DR = 8;

	// Name of the node (note that renaming the node affects its api endpoint)
    string name = 9;

	// Relax frame-counter mode is enabled.
	bool relaxFCnt = 10;

	// Interval (in frames) in which the ADR engine may adapt the data-rate of the node (0 = disabled).
	uint32 adrInterval = 11;

	// Installation-margin to use for ADR calculation.
	double installationMargin = 12;

	// Description of the node.
	string description = 15;

	// Node is activated by ABP.
	bool isABP = 16;
}

message UpdateNodeResponse {}
