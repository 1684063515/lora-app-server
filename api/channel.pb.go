// Code generated by protoc-gen-go.
// source: channel.proto
// DO NOT EDIT!

/*
Package api is a generated protocol buffer package.

It is generated from these files:
	channel.proto
	channelList.proto
	node.proto
	downlinkQueue.proto
	nodeSession.proto
	common.proto

It has these top-level messages:
	CreateChannelRequest
	CreateChannelResponse
	GetChannelRequest
	GetChannelResponse
	UpdateChannelRequest
	UpdateChannelResponse
	DeleteChannelRequest
	DeleteChannelResponse
	ListChannelsByChannelListRequest
	ListChannelsByChannelListResponse
	CreateChannelListRequest
	CreateChannelListResponse
	UpdateChannelListRequest
	UpdateChannelListResponse
	GetChannelListRequest
	GetChannelListResponse
	ListChannelListRequest
	ListChannelListResponse
	DeleteChannelListRequest
	DeleteChannelListResponse
	CreateNodeRequest
	CreateNodeResponse
	GetNodeRequest
	GetNodeResponse
	DeleteNodeRequest
	DeleteNodeResponse
	ListNodeRequest
	ListNodeResponse
	ListNodeByAppEUIRequest
	UpdateNodeRequest
	UpdateNodeResponse
	EnqueueDownlinkQueueItemRequest
	EnqueueDownlinkQueueItemResponse
	DeleteDownlinkQeueueItemRequest
	DeleteDownlinkQueueItemResponse
	DownlinkQueueItem
	ListDownlinkQueueItemsRequest
	ListDownlinkQueueItemsResponse
	CreateNodeSessionRequest
	CreateNodeSessionResponse
	GetNodeSessionRequest
	GetNodeSessionResponse
	UpdateNodeSessionRequest
	UpdateNodeSessionResponse
	DeleteNodeSessionRequest
	DeleteNodeSessionResponse
	GetRandomDevAddrRequest
	GetRandomDevAddrResponse
*/
package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/grpc-ecosystem/grpc-gateway/third_party/googleapis/google/api"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CreateChannelRequest struct {
	ChannelListID int64 `protobuf:"varint,1,opt,name=channelListID" json:"channelListID,omitempty"`
	Channel       int64 `protobuf:"varint,2,opt,name=channel" json:"channel,omitempty"`
	Frequency     int64 `protobuf:"varint,3,opt,name=frequency" json:"frequency,omitempty"`
}

func (m *CreateChannelRequest) Reset()                    { *m = CreateChannelRequest{} }
func (m *CreateChannelRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateChannelRequest) ProtoMessage()               {}
func (*CreateChannelRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type CreateChannelResponse struct {
	Id int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *CreateChannelResponse) Reset()                    { *m = CreateChannelResponse{} }
func (m *CreateChannelResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateChannelResponse) ProtoMessage()               {}
func (*CreateChannelResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type GetChannelRequest struct {
	Id int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *GetChannelRequest) Reset()                    { *m = GetChannelRequest{} }
func (m *GetChannelRequest) String() string            { return proto.CompactTextString(m) }
func (*GetChannelRequest) ProtoMessage()               {}
func (*GetChannelRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type GetChannelResponse struct {
	Id            int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	ChannelListID int64 `protobuf:"varint,2,opt,name=channelListID" json:"channelListID,omitempty"`
	Channel       int64 `protobuf:"varint,3,opt,name=channel" json:"channel,omitempty"`
	Frequency     int64 `protobuf:"varint,4,opt,name=frequency" json:"frequency,omitempty"`
}

func (m *GetChannelResponse) Reset()                    { *m = GetChannelResponse{} }
func (m *GetChannelResponse) String() string            { return proto.CompactTextString(m) }
func (*GetChannelResponse) ProtoMessage()               {}
func (*GetChannelResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type UpdateChannelRequest struct {
	Id            int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	ChannelListID int64 `protobuf:"varint,2,opt,name=channelListID" json:"channelListID,omitempty"`
	Channel       int64 `protobuf:"varint,3,opt,name=channel" json:"channel,omitempty"`
	Frequency     int64 `protobuf:"varint,4,opt,name=frequency" json:"frequency,omitempty"`
}

func (m *UpdateChannelRequest) Reset()                    { *m = UpdateChannelRequest{} }
func (m *UpdateChannelRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateChannelRequest) ProtoMessage()               {}
func (*UpdateChannelRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type UpdateChannelResponse struct {
}

func (m *UpdateChannelResponse) Reset()                    { *m = UpdateChannelResponse{} }
func (m *UpdateChannelResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateChannelResponse) ProtoMessage()               {}
func (*UpdateChannelResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

type DeleteChannelRequest struct {
	Id int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *DeleteChannelRequest) Reset()                    { *m = DeleteChannelRequest{} }
func (m *DeleteChannelRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteChannelRequest) ProtoMessage()               {}
func (*DeleteChannelRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

type DeleteChannelResponse struct {
}

func (m *DeleteChannelResponse) Reset()                    { *m = DeleteChannelResponse{} }
func (m *DeleteChannelResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteChannelResponse) ProtoMessage()               {}
func (*DeleteChannelResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

type ListChannelsByChannelListRequest struct {
	Id int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *ListChannelsByChannelListRequest) Reset()         { *m = ListChannelsByChannelListRequest{} }
func (m *ListChannelsByChannelListRequest) String() string { return proto.CompactTextString(m) }
func (*ListChannelsByChannelListRequest) ProtoMessage()    {}
func (*ListChannelsByChannelListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{8}
}

type ListChannelsByChannelListResponse struct {
	Result []*GetChannelResponse `protobuf:"bytes,2,rep,name=result" json:"result,omitempty"`
}

func (m *ListChannelsByChannelListResponse) Reset()         { *m = ListChannelsByChannelListResponse{} }
func (m *ListChannelsByChannelListResponse) String() string { return proto.CompactTextString(m) }
func (*ListChannelsByChannelListResponse) ProtoMessage()    {}
func (*ListChannelsByChannelListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{9}
}

func (m *ListChannelsByChannelListResponse) GetResult() []*GetChannelResponse {
	if m != nil {
		return m.Result
	}
	return nil
}

func init() {
	proto.RegisterType((*CreateChannelRequest)(nil), "api.CreateChannelRequest")
	proto.RegisterType((*CreateChannelResponse)(nil), "api.CreateChannelResponse")
	proto.RegisterType((*GetChannelRequest)(nil), "api.GetChannelRequest")
	proto.RegisterType((*GetChannelResponse)(nil), "api.GetChannelResponse")
	proto.RegisterType((*UpdateChannelRequest)(nil), "api.UpdateChannelRequest")
	proto.RegisterType((*UpdateChannelResponse)(nil), "api.UpdateChannelResponse")
	proto.RegisterType((*DeleteChannelRequest)(nil), "api.DeleteChannelRequest")
	proto.RegisterType((*DeleteChannelResponse)(nil), "api.DeleteChannelResponse")
	proto.RegisterType((*ListChannelsByChannelListRequest)(nil), "api.ListChannelsByChannelListRequest")
	proto.RegisterType((*ListChannelsByChannelListResponse)(nil), "api.ListChannelsByChannelListResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion3

// Client API for Channel service

type ChannelClient interface {
	// Create creates the given channel.
	Create(ctx context.Context, in *CreateChannelRequest, opts ...grpc.CallOption) (*CreateChannelResponse, error)
	// Get returns the channel matching the given id.
	Get(ctx context.Context, in *GetChannelRequest, opts ...grpc.CallOption) (*GetChannelResponse, error)
	// Update updates the given channel.
	Update(ctx context.Context, in *UpdateChannelRequest, opts ...grpc.CallOption) (*UpdateChannelResponse, error)
	// Delete deletes the channel matching the given id.
	Delete(ctx context.Context, in *DeleteChannelRequest, opts ...grpc.CallOption) (*DeleteChannelResponse, error)
	// ListByChannelList lists the channels matching the given channel-list id.
	ListByChannelList(ctx context.Context, in *ListChannelsByChannelListRequest, opts ...grpc.CallOption) (*ListChannelsByChannelListResponse, error)
}

type channelClient struct {
	cc *grpc.ClientConn
}

func NewChannelClient(cc *grpc.ClientConn) ChannelClient {
	return &channelClient{cc}
}

func (c *channelClient) Create(ctx context.Context, in *CreateChannelRequest, opts ...grpc.CallOption) (*CreateChannelResponse, error) {
	out := new(CreateChannelResponse)
	err := grpc.Invoke(ctx, "/api.Channel/Create", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *channelClient) Get(ctx context.Context, in *GetChannelRequest, opts ...grpc.CallOption) (*GetChannelResponse, error) {
	out := new(GetChannelResponse)
	err := grpc.Invoke(ctx, "/api.Channel/Get", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *channelClient) Update(ctx context.Context, in *UpdateChannelRequest, opts ...grpc.CallOption) (*UpdateChannelResponse, error) {
	out := new(UpdateChannelResponse)
	err := grpc.Invoke(ctx, "/api.Channel/Update", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *channelClient) Delete(ctx context.Context, in *DeleteChannelRequest, opts ...grpc.CallOption) (*DeleteChannelResponse, error) {
	out := new(DeleteChannelResponse)
	err := grpc.Invoke(ctx, "/api.Channel/Delete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *channelClient) ListByChannelList(ctx context.Context, in *ListChannelsByChannelListRequest, opts ...grpc.CallOption) (*ListChannelsByChannelListResponse, error) {
	out := new(ListChannelsByChannelListResponse)
	err := grpc.Invoke(ctx, "/api.Channel/ListByChannelList", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Channel service

type ChannelServer interface {
	// Create creates the given channel.
	Create(context.Context, *CreateChannelRequest) (*CreateChannelResponse, error)
	// Get returns the channel matching the given id.
	Get(context.Context, *GetChannelRequest) (*GetChannelResponse, error)
	// Update updates the given channel.
	Update(context.Context, *UpdateChannelRequest) (*UpdateChannelResponse, error)
	// Delete deletes the channel matching the given id.
	Delete(context.Context, *DeleteChannelRequest) (*DeleteChannelResponse, error)
	// ListByChannelList lists the channels matching the given channel-list id.
	ListByChannelList(context.Context, *ListChannelsByChannelListRequest) (*ListChannelsByChannelListResponse, error)
}

func RegisterChannelServer(s *grpc.Server, srv ChannelServer) {
	s.RegisterService(&_Channel_serviceDesc, srv)
}

func _Channel_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateChannelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChannelServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Channel/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChannelServer).Create(ctx, req.(*CreateChannelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Channel_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetChannelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChannelServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Channel/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChannelServer).Get(ctx, req.(*GetChannelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Channel_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateChannelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChannelServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Channel/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChannelServer).Update(ctx, req.(*UpdateChannelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Channel_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteChannelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChannelServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Channel/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChannelServer).Delete(ctx, req.(*DeleteChannelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Channel_ListByChannelList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListChannelsByChannelListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChannelServer).ListByChannelList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Channel/ListByChannelList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChannelServer).ListByChannelList(ctx, req.(*ListChannelsByChannelListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Channel_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.Channel",
	HandlerType: (*ChannelServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _Channel_Create_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _Channel_Get_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _Channel_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _Channel_Delete_Handler,
		},
		{
			MethodName: "ListByChannelList",
			Handler:    _Channel_ListByChannelList_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: fileDescriptor0,
}

func init() { proto.RegisterFile("channel.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 431 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xbc, 0x94, 0xcd, 0x4a, 0xc3, 0x40,
	0x10, 0xc7, 0x49, 0x22, 0x29, 0x8e, 0x1f, 0x90, 0xb5, 0x1f, 0x69, 0xa8, 0x58, 0xa3, 0xad, 0xa5,
	0x87, 0x06, 0xea, 0xcd, 0xa3, 0x2d, 0x14, 0xc1, 0x8b, 0x45, 0x41, 0x04, 0x0f, 0xb1, 0x59, 0xeb,
	0x42, 0x48, 0x62, 0xb2, 0x3d, 0x14, 0xf1, 0x52, 0xbc, 0x78, 0xf6, 0xd1, 0x7c, 0x05, 0x5f, 0x43,
	0x90, 0x6c, 0x56, 0xdb, 0x26, 0xdb, 0xe6, 0xe6, 0x31, 0x33, 0xb3, 0xff, 0xf9, 0xcd, 0xfe, 0x67,
	0x03, 0x3b, 0xa3, 0x27, 0xdb, 0xf3, 0xb0, 0xdb, 0x09, 0x42, 0x9f, 0xfa, 0x48, 0xb1, 0x03, 0x62,
	0xd4, 0xc6, 0xbe, 0x3f, 0x76, 0xb1, 0x65, 0x07, 0xc4, 0xb2, 0x3d, 0xcf, 0xa7, 0x36, 0x25, 0xbe,
	0x17, 0x25, 0x25, 0x26, 0x85, 0x62, 0x2f, 0xc4, 0x36, 0xc5, 0xbd, 0xe4, 0xe4, 0x10, 0x3f, 0x4f,
	0x70, 0x44, 0xd1, 0xf1, 0x9f, 0xd6, 0x25, 0x89, 0xe8, 0x45, 0x5f, 0x97, 0xea, 0x52, 0x4b, 0x19,
	0x2e, 0x07, 0x91, 0x0e, 0x05, 0x1e, 0xd0, 0x65, 0x96, 0xff, 0xfd, 0x44, 0x35, 0xd8, 0x7c, 0x0c,
	0x63, 0x2d, 0x6f, 0x34, 0xd5, 0x15, 0x96, 0x9b, 0x07, 0xcc, 0x13, 0x28, 0xa5, 0xba, 0x46, 0x81,
	0xef, 0x45, 0x18, 0xed, 0x82, 0x4c, 0x1c, 0xde, 0x4b, 0x26, 0x8e, 0x79, 0x04, 0xda, 0x00, 0xd3,
	0x14, 0x5b, 0xba, 0x68, 0x26, 0x01, 0x5a, 0xac, 0x12, 0x6b, 0x65, 0x47, 0x92, 0x73, 0x46, 0x52,
	0xd6, 0x8c, 0xb4, 0x91, 0x1e, 0xe9, 0x4d, 0x82, 0xe2, 0x4d, 0xe0, 0x64, 0x6f, 0xf2, 0x7f, 0x31,
	0x2a, 0x50, 0x4a, 0x51, 0x24, 0xb7, 0x61, 0x36, 0xa1, 0xd8, 0xc7, 0x2e, 0xce, 0xc3, 0x8b, 0x05,
	0x52, 0x75, 0x5c, 0xa0, 0x0b, 0xf5, 0x98, 0x8d, 0x87, 0xa3, 0xf3, 0x69, 0x6f, 0x0e, 0xbc, 0x4a,
	0xec, 0x1a, 0x0e, 0xd7, 0x9c, 0xe1, 0x3e, 0x59, 0xa0, 0x86, 0x38, 0x9a, 0xb8, 0x54, 0x97, 0xeb,
	0x4a, 0x6b, 0xab, 0x5b, 0xe9, 0xd8, 0x01, 0xe9, 0x64, 0x0d, 0x1d, 0xf2, 0xb2, 0xee, 0xb7, 0x02,
	0x05, 0x9e, 0x43, 0xb7, 0xa0, 0x26, 0x9b, 0x84, 0xaa, 0xec, 0x98, 0x68, 0x99, 0x0d, 0x43, 0x94,
	0xe2, 0x63, 0x55, 0x66, 0x9f, 0x5f, 0x1f, 0xb2, 0x66, 0x6e, 0xb3, 0x07, 0xc2, 0x2f, 0xf9, 0x4c,
	0x6a, 0xa3, 0x2b, 0x50, 0x06, 0x98, 0xa2, 0x72, 0x86, 0x26, 0xd1, 0x5c, 0x45, 0x69, 0x56, 0x99,
	0xe0, 0x1e, 0xd2, 0x16, 0x05, 0xad, 0x17, 0xe2, 0xbc, 0xa2, 0x7b, 0x50, 0x13, 0x73, 0x38, 0xac,
	0x68, 0x5f, 0x38, 0xac, 0xd8, 0xc4, 0x1a, 0xd3, 0x2e, 0x1b, 0x59, 0xed, 0x98, 0xf8, 0x0e, 0xd4,
	0xc4, 0x3a, 0x2e, 0x2f, 0xf2, 0x9b, 0xcb, 0x8b, 0x2d, 0xe6, 0xe8, 0x6d, 0x01, 0xfa, 0xbb, 0x04,
	0x5a, 0xec, 0xda, 0x92, 0x85, 0xa8, 0xc1, 0xc4, 0xf2, 0xd6, 0xc2, 0x68, 0xe6, 0x95, 0xf1, 0xfe,
	0x0d, 0xd6, 0xff, 0x00, 0xed, 0x2f, 0xf5, 0x5f, 0x78, 0x18, 0x8c, 0xe5, 0x41, 0x65, 0xbf, 0xae,
	0xd3, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xd3, 0xdf, 0x72, 0xee, 0x04, 0x00, 0x00,
}
