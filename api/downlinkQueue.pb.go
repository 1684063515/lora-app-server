// Code generated by protoc-gen-go.
// source: downlinkQueue.proto
// DO NOT EDIT!

package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/grpc-ecosystem/grpc-gateway/third_party/googleapis/google/api"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type EnqueueDownlinkQueueItemRequest struct {
	// name of the node
	NodeName string `protobuf:"bytes,1,opt,name=nodeName" json:"nodeName,omitempty"`
	// random reference (used on ack notification)
	Reference string `protobuf:"bytes,2,opt,name=reference" json:"reference,omitempty"`
	// requires an ack from the node
	Confirmed bool `protobuf:"varint,3,opt,name=confirmed" json:"confirmed,omitempty"`
	// FPort to be used
	FPort uint32 `protobuf:"varint,4,opt,name=fPort" json:"fPort,omitempty"`
	// base64 encoded data
	Data []byte `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
	// name of the application to which the node is linked
	ApplicationName string `protobuf:"bytes,6,opt,name=applicationName" json:"applicationName,omitempty"`
}

func (m *EnqueueDownlinkQueueItemRequest) Reset()                    { *m = EnqueueDownlinkQueueItemRequest{} }
func (m *EnqueueDownlinkQueueItemRequest) String() string            { return proto.CompactTextString(m) }
func (*EnqueueDownlinkQueueItemRequest) ProtoMessage()               {}
func (*EnqueueDownlinkQueueItemRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *EnqueueDownlinkQueueItemRequest) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

func (m *EnqueueDownlinkQueueItemRequest) GetReference() string {
	if m != nil {
		return m.Reference
	}
	return ""
}

func (m *EnqueueDownlinkQueueItemRequest) GetConfirmed() bool {
	if m != nil {
		return m.Confirmed
	}
	return false
}

func (m *EnqueueDownlinkQueueItemRequest) GetFPort() uint32 {
	if m != nil {
		return m.FPort
	}
	return 0
}

func (m *EnqueueDownlinkQueueItemRequest) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *EnqueueDownlinkQueueItemRequest) GetApplicationName() string {
	if m != nil {
		return m.ApplicationName
	}
	return ""
}

type EnqueueDownlinkQueueItemResponse struct {
}

func (m *EnqueueDownlinkQueueItemResponse) Reset()         { *m = EnqueueDownlinkQueueItemResponse{} }
func (m *EnqueueDownlinkQueueItemResponse) String() string { return proto.CompactTextString(m) }
func (*EnqueueDownlinkQueueItemResponse) ProtoMessage()    {}
func (*EnqueueDownlinkQueueItemResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor2, []int{1}
}

type DeleteDownlinkQeueueItemRequest struct {
	// ID of the queue item
	Id int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	// name of the node
	NodeName string `protobuf:"bytes,2,opt,name=nodeName" json:"nodeName,omitempty"`
	// name of the application to which the node is linked
	ApplicationName string `protobuf:"bytes,3,opt,name=applicationName" json:"applicationName,omitempty"`
}

func (m *DeleteDownlinkQeueueItemRequest) Reset()                    { *m = DeleteDownlinkQeueueItemRequest{} }
func (m *DeleteDownlinkQeueueItemRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteDownlinkQeueueItemRequest) ProtoMessage()               {}
func (*DeleteDownlinkQeueueItemRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{2} }

func (m *DeleteDownlinkQeueueItemRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *DeleteDownlinkQeueueItemRequest) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

func (m *DeleteDownlinkQeueueItemRequest) GetApplicationName() string {
	if m != nil {
		return m.ApplicationName
	}
	return ""
}

type DeleteDownlinkQueueItemResponse struct {
}

func (m *DeleteDownlinkQueueItemResponse) Reset()                    { *m = DeleteDownlinkQueueItemResponse{} }
func (m *DeleteDownlinkQueueItemResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteDownlinkQueueItemResponse) ProtoMessage()               {}
func (*DeleteDownlinkQueueItemResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{3} }

type DownlinkQueueItem struct {
	// id of the queue item
	Id int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	// name of the node
	NodeName string `protobuf:"bytes,2,opt,name=nodeName" json:"nodeName,omitempty"`
	// random reference (used on ack notification)
	Reference string `protobuf:"bytes,3,opt,name=reference" json:"reference,omitempty"`
	// requires an ack from the node
	Confirmed bool `protobuf:"varint,4,opt,name=confirmed" json:"confirmed,omitempty"`
	// the transmission is pending (waiting for an ack)
	Pending bool `protobuf:"varint,5,opt,name=pending" json:"pending,omitempty"`
	// FPort to be used
	FPort uint32 `protobuf:"varint,6,opt,name=fPort" json:"fPort,omitempty"`
	// base64 encoded data
	Data []byte `protobuf:"bytes,7,opt,name=data,proto3" json:"data,omitempty"`
}

func (m *DownlinkQueueItem) Reset()                    { *m = DownlinkQueueItem{} }
func (m *DownlinkQueueItem) String() string            { return proto.CompactTextString(m) }
func (*DownlinkQueueItem) ProtoMessage()               {}
func (*DownlinkQueueItem) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{4} }

func (m *DownlinkQueueItem) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *DownlinkQueueItem) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

func (m *DownlinkQueueItem) GetReference() string {
	if m != nil {
		return m.Reference
	}
	return ""
}

func (m *DownlinkQueueItem) GetConfirmed() bool {
	if m != nil {
		return m.Confirmed
	}
	return false
}

func (m *DownlinkQueueItem) GetPending() bool {
	if m != nil {
		return m.Pending
	}
	return false
}

func (m *DownlinkQueueItem) GetFPort() uint32 {
	if m != nil {
		return m.FPort
	}
	return 0
}

func (m *DownlinkQueueItem) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type ListDownlinkQueueItemsRequest struct {
	// name of the node
	NodeName string `protobuf:"bytes,1,opt,name=nodeName" json:"nodeName,omitempty"`
	// name of the application to which the node is linked
	ApplicationName string `protobuf:"bytes,2,opt,name=applicationName" json:"applicationName,omitempty"`
}

func (m *ListDownlinkQueueItemsRequest) Reset()                    { *m = ListDownlinkQueueItemsRequest{} }
func (m *ListDownlinkQueueItemsRequest) String() string            { return proto.CompactTextString(m) }
func (*ListDownlinkQueueItemsRequest) ProtoMessage()               {}
func (*ListDownlinkQueueItemsRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{5} }

func (m *ListDownlinkQueueItemsRequest) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

func (m *ListDownlinkQueueItemsRequest) GetApplicationName() string {
	if m != nil {
		return m.ApplicationName
	}
	return ""
}

type ListDownlinkQueueItemsResponse struct {
	Items []*DownlinkQueueItem `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
}

func (m *ListDownlinkQueueItemsResponse) Reset()                    { *m = ListDownlinkQueueItemsResponse{} }
func (m *ListDownlinkQueueItemsResponse) String() string            { return proto.CompactTextString(m) }
func (*ListDownlinkQueueItemsResponse) ProtoMessage()               {}
func (*ListDownlinkQueueItemsResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{6} }

func (m *ListDownlinkQueueItemsResponse) GetItems() []*DownlinkQueueItem {
	if m != nil {
		return m.Items
	}
	return nil
}

func init() {
	proto.RegisterType((*EnqueueDownlinkQueueItemRequest)(nil), "api.EnqueueDownlinkQueueItemRequest")
	proto.RegisterType((*EnqueueDownlinkQueueItemResponse)(nil), "api.EnqueueDownlinkQueueItemResponse")
	proto.RegisterType((*DeleteDownlinkQeueueItemRequest)(nil), "api.DeleteDownlinkQeueueItemRequest")
	proto.RegisterType((*DeleteDownlinkQueueItemResponse)(nil), "api.DeleteDownlinkQueueItemResponse")
	proto.RegisterType((*DownlinkQueueItem)(nil), "api.DownlinkQueueItem")
	proto.RegisterType((*ListDownlinkQueueItemsRequest)(nil), "api.ListDownlinkQueueItemsRequest")
	proto.RegisterType((*ListDownlinkQueueItemsResponse)(nil), "api.ListDownlinkQueueItemsResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for DownlinkQueue service

type DownlinkQueueClient interface {
	// Enqueue adds the given item to the queue.
	Enqueue(ctx context.Context, in *EnqueueDownlinkQueueItemRequest, opts ...grpc.CallOption) (*EnqueueDownlinkQueueItemResponse, error)
	// Delete deletes an item from the queue.
	Delete(ctx context.Context, in *DeleteDownlinkQeueueItemRequest, opts ...grpc.CallOption) (*DeleteDownlinkQueueItemResponse, error)
	// List lists the items in the queue for the given node.
	List(ctx context.Context, in *ListDownlinkQueueItemsRequest, opts ...grpc.CallOption) (*ListDownlinkQueueItemsResponse, error)
}

type downlinkQueueClient struct {
	cc *grpc.ClientConn
}

func NewDownlinkQueueClient(cc *grpc.ClientConn) DownlinkQueueClient {
	return &downlinkQueueClient{cc}
}

func (c *downlinkQueueClient) Enqueue(ctx context.Context, in *EnqueueDownlinkQueueItemRequest, opts ...grpc.CallOption) (*EnqueueDownlinkQueueItemResponse, error) {
	out := new(EnqueueDownlinkQueueItemResponse)
	err := grpc.Invoke(ctx, "/api.DownlinkQueue/Enqueue", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *downlinkQueueClient) Delete(ctx context.Context, in *DeleteDownlinkQeueueItemRequest, opts ...grpc.CallOption) (*DeleteDownlinkQueueItemResponse, error) {
	out := new(DeleteDownlinkQueueItemResponse)
	err := grpc.Invoke(ctx, "/api.DownlinkQueue/Delete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *downlinkQueueClient) List(ctx context.Context, in *ListDownlinkQueueItemsRequest, opts ...grpc.CallOption) (*ListDownlinkQueueItemsResponse, error) {
	out := new(ListDownlinkQueueItemsResponse)
	err := grpc.Invoke(ctx, "/api.DownlinkQueue/List", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for DownlinkQueue service

type DownlinkQueueServer interface {
	// Enqueue adds the given item to the queue.
	Enqueue(context.Context, *EnqueueDownlinkQueueItemRequest) (*EnqueueDownlinkQueueItemResponse, error)
	// Delete deletes an item from the queue.
	Delete(context.Context, *DeleteDownlinkQeueueItemRequest) (*DeleteDownlinkQueueItemResponse, error)
	// List lists the items in the queue for the given node.
	List(context.Context, *ListDownlinkQueueItemsRequest) (*ListDownlinkQueueItemsResponse, error)
}

func RegisterDownlinkQueueServer(s *grpc.Server, srv DownlinkQueueServer) {
	s.RegisterService(&_DownlinkQueue_serviceDesc, srv)
}

func _DownlinkQueue_Enqueue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EnqueueDownlinkQueueItemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DownlinkQueueServer).Enqueue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.DownlinkQueue/Enqueue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DownlinkQueueServer).Enqueue(ctx, req.(*EnqueueDownlinkQueueItemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DownlinkQueue_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteDownlinkQeueueItemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DownlinkQueueServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.DownlinkQueue/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DownlinkQueueServer).Delete(ctx, req.(*DeleteDownlinkQeueueItemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DownlinkQueue_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListDownlinkQueueItemsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DownlinkQueueServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.DownlinkQueue/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DownlinkQueueServer).List(ctx, req.(*ListDownlinkQueueItemsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DownlinkQueue_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.DownlinkQueue",
	HandlerType: (*DownlinkQueueServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Enqueue",
			Handler:    _DownlinkQueue_Enqueue_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _DownlinkQueue_Delete_Handler,
		},
		{
			MethodName: "List",
			Handler:    _DownlinkQueue_List_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "downlinkQueue.proto",
}

func init() { proto.RegisterFile("downlinkQueue.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 480 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xa4, 0x94, 0xdd, 0x6e, 0xd3, 0x30,
	0x14, 0xc7, 0xe5, 0xa4, 0x5f, 0x3b, 0x30, 0x10, 0x06, 0xa1, 0x28, 0x1a, 0x2c, 0x04, 0x90, 0xa2,
	0x09, 0x35, 0xd2, 0xb8, 0x9b, 0x90, 0x26, 0xd0, 0x26, 0x84, 0x84, 0x26, 0xc8, 0x1b, 0x98, 0xfa,
	0xb4, 0xb2, 0x68, 0x6d, 0x2f, 0x76, 0xb5, 0x8b, 0xaa, 0x37, 0xbc, 0xc2, 0xae, 0x79, 0x16, 0x9e,
	0x80, 0x2b, 0x5e, 0x01, 0xde, 0x03, 0xc5, 0xe9, 0x08, 0x4d, 0xb2, 0x96, 0x8f, 0xbb, 0xfa, 0x9c,
	0x13, 0x9f, 0xdf, 0xf9, 0xff, 0x8f, 0x0b, 0x77, 0xb9, 0xba, 0x90, 0x53, 0x21, 0x3f, 0xbe, 0x9f,
	0xe3, 0x1c, 0x87, 0x3a, 0x57, 0x56, 0x51, 0x9f, 0x69, 0x11, 0xee, 0x4d, 0x94, 0x9a, 0x4c, 0x31,
	0x65, 0x5a, 0xa4, 0x4c, 0x4a, 0x65, 0x99, 0x15, 0x4a, 0x9a, 0xb2, 0x24, 0xfe, 0x4a, 0x60, 0xff,
	0x54, 0x9e, 0x17, 0x1f, 0x9d, 0xfc, 0x7e, 0xc3, 0x1b, 0x8b, 0xb3, 0x0c, 0xcf, 0xe7, 0x68, 0x2c,
	0x0d, 0x61, 0x20, 0x15, 0xc7, 0x33, 0x36, 0xc3, 0x80, 0x44, 0x24, 0xd9, 0xc9, 0x7e, 0x9d, 0xe9,
	0x1e, 0xec, 0xe4, 0x38, 0xc6, 0x1c, 0xe5, 0x08, 0x03, 0xcf, 0x25, 0xab, 0x40, 0x91, 0x1d, 0x29,
	0x39, 0x16, 0xf9, 0x0c, 0x79, 0xe0, 0x47, 0x24, 0x19, 0x64, 0x55, 0x80, 0xde, 0x83, 0xee, 0xf8,
	0x9d, 0xca, 0x6d, 0xd0, 0x89, 0x48, 0xb2, 0x9b, 0x95, 0x07, 0x4a, 0xa1, 0xc3, 0x99, 0x65, 0x41,
	0x37, 0x22, 0xc9, 0xcd, 0xcc, 0xfd, 0xa6, 0x09, 0xdc, 0x66, 0x5a, 0x4f, 0xc5, 0xc8, 0xb1, 0x3b,
	0x90, 0x9e, 0xeb, 0x55, 0x0f, 0xc7, 0x31, 0x44, 0xd7, 0x8f, 0x63, 0xb4, 0x92, 0x06, 0xe3, 0x0b,
	0xd8, 0x3f, 0xc1, 0x29, 0xda, 0xaa, 0x04, 0xeb, 0x23, 0xdf, 0x02, 0x4f, 0x70, 0x37, 0xac, 0x9f,
	0x79, 0x82, 0xaf, 0x49, 0xe0, 0xd5, 0x24, 0x68, 0x81, 0xf3, 0xdb, 0xe1, 0x1e, 0x35, 0x1a, 0x37,
	0xd8, 0xbe, 0x10, 0xb8, 0xd3, 0xc8, 0xfe, 0x15, 0xce, 0x9a, 0x23, 0xfe, 0x46, 0x47, 0x3a, 0x75,
	0x47, 0x02, 0xe8, 0x6b, 0x94, 0x5c, 0xc8, 0x89, 0x93, 0x7f, 0x90, 0x5d, 0x1d, 0x2b, 0xaf, 0x7a,
	0x6d, 0x5e, 0xf5, 0x2b, 0xaf, 0x62, 0x84, 0x07, 0x6f, 0x85, 0xb1, 0x8d, 0x21, 0xcc, 0x9f, 0xac,
	0x53, 0x8b, 0x96, 0x5e, 0xbb, 0x96, 0x67, 0xf0, 0xf0, 0xba, 0x36, 0xa5, 0x94, 0xf4, 0x19, 0x74,
	0x45, 0x11, 0x08, 0x48, 0xe4, 0x27, 0x37, 0x0e, 0xef, 0x0f, 0x99, 0x16, 0xc3, 0xa6, 0xf2, 0x65,
	0xd1, 0xe1, 0x0f, 0x1f, 0x76, 0xd7, 0x92, 0xf4, 0x33, 0x81, 0xfe, 0x6a, 0x97, 0xe8, 0x13, 0xf7,
	0xf1, 0x96, 0x87, 0x12, 0x3e, 0xdd, 0x52, 0xb5, 0xf2, 0xf8, 0xf4, 0xd3, 0xb7, 0xef, 0x97, 0xde,
	0x71, 0x7c, 0x54, 0xbe, 0xc9, 0x6a, 0x30, 0x93, 0x2e, 0x6a, 0x63, 0x2e, 0xd3, 0x42, 0x1a, 0x93,
	0x2e, 0xae, 0x14, 0x5a, 0xa6, 0xee, 0xf2, 0x23, 0x72, 0x50, 0xf0, 0xf5, 0xca, 0x75, 0x5a, 0xe1,
	0x6d, 0x59, 0xea, 0xb0, 0xb5, 0xaa, 0x41, 0xf7, 0xda, 0xd1, 0xbd, 0x3c, 0x38, 0xfe, 0x77, 0xba,
	0x74, 0x21, 0xf8, 0x92, 0x5e, 0x12, 0xe8, 0x14, 0x16, 0xd1, 0xd8, 0xf5, 0xdd, 0xb8, 0x14, 0xe1,
	0xe3, 0x8d, 0x35, 0x2b, 0xb4, 0x57, 0x0e, 0xed, 0x05, 0xfd, 0x0f, 0xe1, 0x3e, 0xf4, 0xdc, 0xff,
	0xde, 0xf3, 0x9f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x78, 0x8c, 0xd2, 0x2a, 0x31, 0x05, 0x00, 0x00,
}
