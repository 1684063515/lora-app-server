// Code generated by protoc-gen-go. DO NOT EDIT.
// source: downlinkQueue.proto

package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type EnqueueDownlinkQueueItemRequest struct {
	// Hex encoded DevEUI of the node.
	DevEUI string `protobuf:"bytes,1,opt,name=devEUI" json:"devEUI,omitempty"`
	// Random reference (used on ack notification).
	Reference string `protobuf:"bytes,2,opt,name=reference" json:"reference,omitempty"`
	// Is an ACK required from the node.
	Confirmed bool `protobuf:"varint,3,opt,name=confirmed" json:"confirmed,omitempty"`
	// FPort used (must be >0)
	FPort uint32 `protobuf:"varint,4,opt,name=fPort" json:"fPort,omitempty"`
	// Base64 encoded data.
	Data []byte `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (m *EnqueueDownlinkQueueItemRequest) Reset()                    { *m = EnqueueDownlinkQueueItemRequest{} }
func (m *EnqueueDownlinkQueueItemRequest) String() string            { return proto.CompactTextString(m) }
func (*EnqueueDownlinkQueueItemRequest) ProtoMessage()               {}
func (*EnqueueDownlinkQueueItemRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *EnqueueDownlinkQueueItemRequest) GetDevEUI() string {
	if m != nil {
		return m.DevEUI
	}
	return ""
}

func (m *EnqueueDownlinkQueueItemRequest) GetReference() string {
	if m != nil {
		return m.Reference
	}
	return ""
}

func (m *EnqueueDownlinkQueueItemRequest) GetConfirmed() bool {
	if m != nil {
		return m.Confirmed
	}
	return false
}

func (m *EnqueueDownlinkQueueItemRequest) GetFPort() uint32 {
	if m != nil {
		return m.FPort
	}
	return 0
}

func (m *EnqueueDownlinkQueueItemRequest) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type EnqueueDownlinkQueueItemResponse struct {
}

func (m *EnqueueDownlinkQueueItemResponse) Reset()         { *m = EnqueueDownlinkQueueItemResponse{} }
func (m *EnqueueDownlinkQueueItemResponse) String() string { return proto.CompactTextString(m) }
func (*EnqueueDownlinkQueueItemResponse) ProtoMessage()    {}
func (*EnqueueDownlinkQueueItemResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor2, []int{1}
}

type DeleteDownlinkQeueueItemRequest struct {
	// Hex encoded DevEUI of the node.
	DevEUI string `protobuf:"bytes,2,opt,name=devEUI" json:"devEUI,omitempty"`
	// ID of the queue item to delete.
	Id int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *DeleteDownlinkQeueueItemRequest) Reset()                    { *m = DeleteDownlinkQeueueItemRequest{} }
func (m *DeleteDownlinkQeueueItemRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteDownlinkQeueueItemRequest) ProtoMessage()               {}
func (*DeleteDownlinkQeueueItemRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{2} }

func (m *DeleteDownlinkQeueueItemRequest) GetDevEUI() string {
	if m != nil {
		return m.DevEUI
	}
	return ""
}

func (m *DeleteDownlinkQeueueItemRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type DeleteDownlinkQueueItemResponse struct {
}

func (m *DeleteDownlinkQueueItemResponse) Reset()                    { *m = DeleteDownlinkQueueItemResponse{} }
func (m *DeleteDownlinkQueueItemResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteDownlinkQueueItemResponse) ProtoMessage()               {}
func (*DeleteDownlinkQueueItemResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{3} }

type DownlinkQueueItem struct {
	// ID of the queue item.
	Id int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	// Hex encoded DevEUI of the node.
	DevEUI string `protobuf:"bytes,2,opt,name=devEUI" json:"devEUI,omitempty"`
	// Random reference (used on ack notification).
	Reference string `protobuf:"bytes,3,opt,name=reference" json:"reference,omitempty"`
	// Is an ACK required from the node.
	Confirmed bool `protobuf:"varint,4,opt,name=confirmed" json:"confirmed,omitempty"`
	// Transmission is pending (waiting for an ack).
	Pending bool `protobuf:"varint,5,opt,name=pending" json:"pending,omitempty"`
	// FPort used (must be >0).
	FPort uint32 `protobuf:"varint,6,opt,name=fPort" json:"fPort,omitempty"`
	// Base64 encoded data.
	Data []byte `protobuf:"bytes,7,opt,name=data,proto3" json:"data,omitempty"`
}

func (m *DownlinkQueueItem) Reset()                    { *m = DownlinkQueueItem{} }
func (m *DownlinkQueueItem) String() string            { return proto.CompactTextString(m) }
func (*DownlinkQueueItem) ProtoMessage()               {}
func (*DownlinkQueueItem) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{4} }

func (m *DownlinkQueueItem) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *DownlinkQueueItem) GetDevEUI() string {
	if m != nil {
		return m.DevEUI
	}
	return ""
}

func (m *DownlinkQueueItem) GetReference() string {
	if m != nil {
		return m.Reference
	}
	return ""
}

func (m *DownlinkQueueItem) GetConfirmed() bool {
	if m != nil {
		return m.Confirmed
	}
	return false
}

func (m *DownlinkQueueItem) GetPending() bool {
	if m != nil {
		return m.Pending
	}
	return false
}

func (m *DownlinkQueueItem) GetFPort() uint32 {
	if m != nil {
		return m.FPort
	}
	return 0
}

func (m *DownlinkQueueItem) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type ListDownlinkQueueItemsRequest struct {
	// Hex encoded DevEUI of the node.
	DevEUI string `protobuf:"bytes,1,opt,name=devEUI" json:"devEUI,omitempty"`
}

func (m *ListDownlinkQueueItemsRequest) Reset()                    { *m = ListDownlinkQueueItemsRequest{} }
func (m *ListDownlinkQueueItemsRequest) String() string            { return proto.CompactTextString(m) }
func (*ListDownlinkQueueItemsRequest) ProtoMessage()               {}
func (*ListDownlinkQueueItemsRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{5} }

func (m *ListDownlinkQueueItemsRequest) GetDevEUI() string {
	if m != nil {
		return m.DevEUI
	}
	return ""
}

type ListDownlinkQueueItemsResponse struct {
	Items []*DownlinkQueueItem `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
}

func (m *ListDownlinkQueueItemsResponse) Reset()                    { *m = ListDownlinkQueueItemsResponse{} }
func (m *ListDownlinkQueueItemsResponse) String() string            { return proto.CompactTextString(m) }
func (*ListDownlinkQueueItemsResponse) ProtoMessage()               {}
func (*ListDownlinkQueueItemsResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{6} }

func (m *ListDownlinkQueueItemsResponse) GetItems() []*DownlinkQueueItem {
	if m != nil {
		return m.Items
	}
	return nil
}

func init() {
	proto.RegisterType((*EnqueueDownlinkQueueItemRequest)(nil), "api.EnqueueDownlinkQueueItemRequest")
	proto.RegisterType((*EnqueueDownlinkQueueItemResponse)(nil), "api.EnqueueDownlinkQueueItemResponse")
	proto.RegisterType((*DeleteDownlinkQeueueItemRequest)(nil), "api.DeleteDownlinkQeueueItemRequest")
	proto.RegisterType((*DeleteDownlinkQueueItemResponse)(nil), "api.DeleteDownlinkQueueItemResponse")
	proto.RegisterType((*DownlinkQueueItem)(nil), "api.DownlinkQueueItem")
	proto.RegisterType((*ListDownlinkQueueItemsRequest)(nil), "api.ListDownlinkQueueItemsRequest")
	proto.RegisterType((*ListDownlinkQueueItemsResponse)(nil), "api.ListDownlinkQueueItemsResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for DownlinkQueue service

type DownlinkQueueClient interface {
	// Enqueue adds the given item to the queue. When the node operates in
	// Class-C mode, the data will be pushed directly to the network-server.
	Enqueue(ctx context.Context, in *EnqueueDownlinkQueueItemRequest, opts ...grpc.CallOption) (*EnqueueDownlinkQueueItemResponse, error)
	// Delete deletes an item from the queue.
	Delete(ctx context.Context, in *DeleteDownlinkQeueueItemRequest, opts ...grpc.CallOption) (*DeleteDownlinkQueueItemResponse, error)
	// List lists the items in the queue for the given node.
	List(ctx context.Context, in *ListDownlinkQueueItemsRequest, opts ...grpc.CallOption) (*ListDownlinkQueueItemsResponse, error)
}

type downlinkQueueClient struct {
	cc *grpc.ClientConn
}

func NewDownlinkQueueClient(cc *grpc.ClientConn) DownlinkQueueClient {
	return &downlinkQueueClient{cc}
}

func (c *downlinkQueueClient) Enqueue(ctx context.Context, in *EnqueueDownlinkQueueItemRequest, opts ...grpc.CallOption) (*EnqueueDownlinkQueueItemResponse, error) {
	out := new(EnqueueDownlinkQueueItemResponse)
	err := grpc.Invoke(ctx, "/api.DownlinkQueue/Enqueue", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *downlinkQueueClient) Delete(ctx context.Context, in *DeleteDownlinkQeueueItemRequest, opts ...grpc.CallOption) (*DeleteDownlinkQueueItemResponse, error) {
	out := new(DeleteDownlinkQueueItemResponse)
	err := grpc.Invoke(ctx, "/api.DownlinkQueue/Delete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *downlinkQueueClient) List(ctx context.Context, in *ListDownlinkQueueItemsRequest, opts ...grpc.CallOption) (*ListDownlinkQueueItemsResponse, error) {
	out := new(ListDownlinkQueueItemsResponse)
	err := grpc.Invoke(ctx, "/api.DownlinkQueue/List", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for DownlinkQueue service

type DownlinkQueueServer interface {
	// Enqueue adds the given item to the queue. When the node operates in
	// Class-C mode, the data will be pushed directly to the network-server.
	Enqueue(context.Context, *EnqueueDownlinkQueueItemRequest) (*EnqueueDownlinkQueueItemResponse, error)
	// Delete deletes an item from the queue.
	Delete(context.Context, *DeleteDownlinkQeueueItemRequest) (*DeleteDownlinkQueueItemResponse, error)
	// List lists the items in the queue for the given node.
	List(context.Context, *ListDownlinkQueueItemsRequest) (*ListDownlinkQueueItemsResponse, error)
}

func RegisterDownlinkQueueServer(s *grpc.Server, srv DownlinkQueueServer) {
	s.RegisterService(&_DownlinkQueue_serviceDesc, srv)
}

func _DownlinkQueue_Enqueue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EnqueueDownlinkQueueItemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DownlinkQueueServer).Enqueue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.DownlinkQueue/Enqueue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DownlinkQueueServer).Enqueue(ctx, req.(*EnqueueDownlinkQueueItemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DownlinkQueue_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteDownlinkQeueueItemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DownlinkQueueServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.DownlinkQueue/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DownlinkQueueServer).Delete(ctx, req.(*DeleteDownlinkQeueueItemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DownlinkQueue_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListDownlinkQueueItemsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DownlinkQueueServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.DownlinkQueue/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DownlinkQueueServer).List(ctx, req.(*ListDownlinkQueueItemsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DownlinkQueue_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.DownlinkQueue",
	HandlerType: (*DownlinkQueueServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Enqueue",
			Handler:    _DownlinkQueue_Enqueue_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _DownlinkQueue_Delete_Handler,
		},
		{
			MethodName: "List",
			Handler:    _DownlinkQueue_List_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "downlinkQueue.proto",
}

func init() { proto.RegisterFile("downlinkQueue.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 439 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x54, 0xd1, 0x6a, 0xd4, 0x40,
	0x14, 0x65, 0x92, 0x6c, 0xb6, 0xbd, 0x5a, 0xc1, 0x51, 0x4a, 0x88, 0xad, 0x1d, 0xa7, 0x2a, 0xa1,
	0xc8, 0x06, 0xea, 0x83, 0xe0, 0x73, 0xfb, 0xb0, 0x20, 0xa2, 0x01, 0x3f, 0x20, 0xee, 0xdc, 0x5d,
	0x06, 0xb7, 0x33, 0x69, 0x32, 0x5b, 0x1f, 0x4a, 0xfb, 0x20, 0xf8, 0x05, 0x7e, 0x80, 0x1f, 0xe2,
	0x67, 0xf8, 0x0b, 0x7e, 0x88, 0x64, 0x92, 0x92, 0xee, 0x66, 0x93, 0xbc, 0x65, 0xee, 0x3d, 0xf7,
	0x9e, 0x9c, 0x73, 0x26, 0x81, 0x27, 0x42, 0x7f, 0x57, 0x4b, 0xa9, 0xbe, 0x7d, 0x5e, 0xe1, 0x0a,
	0x27, 0x59, 0xae, 0x8d, 0xa6, 0x6e, 0x9a, 0xc9, 0xf0, 0x60, 0xa1, 0xf5, 0x62, 0x89, 0x71, 0x9a,
	0xc9, 0x38, 0x55, 0x4a, 0x9b, 0xd4, 0x48, 0xad, 0x8a, 0x0a, 0xc2, 0x7f, 0x13, 0x38, 0x3a, 0x57,
	0x97, 0xe5, 0xd0, 0xd9, 0xfd, 0x0d, 0x53, 0x83, 0x17, 0x09, 0x5e, 0xae, 0xb0, 0x30, 0x74, 0x1f,
	0x7c, 0x81, 0x57, 0xe7, 0x5f, 0xa6, 0x01, 0x61, 0x24, 0xda, 0x4d, 0xea, 0x13, 0x3d, 0x80, 0xdd,
	0x1c, 0xe7, 0x98, 0xa3, 0x9a, 0x61, 0xe0, 0xd8, 0x56, 0x53, 0x28, 0xbb, 0x33, 0xad, 0xe6, 0x32,
	0xbf, 0x40, 0x11, 0xb8, 0x8c, 0x44, 0x3b, 0x49, 0x53, 0xa0, 0x4f, 0x61, 0x34, 0xff, 0xa4, 0x73,
	0x13, 0x78, 0x8c, 0x44, 0x7b, 0x49, 0x75, 0xa0, 0x14, 0x3c, 0x91, 0x9a, 0x34, 0x18, 0x31, 0x12,
	0x3d, 0x4c, 0xec, 0x33, 0xe7, 0xc0, 0xba, 0x5f, 0xb0, 0xc8, 0xb4, 0x2a, 0x90, 0x4f, 0xe1, 0xe8,
	0x0c, 0x97, 0x68, 0x1a, 0x08, 0x76, 0x8b, 0x70, 0xd6, 0x44, 0x3c, 0x02, 0x47, 0x0a, 0x2b, 0xcc,
	0x4d, 0x1c, 0x29, 0xf8, 0x8b, 0xd6, 0xaa, 0x16, 0xdb, 0x1f, 0x02, 0x8f, 0x5b, 0xdd, 0xcd, 0x45,
	0x9d, 0x84, 0x6b, 0xae, 0xb9, 0xbd, 0xae, 0x79, 0x9b, 0xae, 0x05, 0x30, 0xce, 0x50, 0x09, 0xa9,
	0x16, 0xd6, 0xa2, 0x9d, 0xe4, 0xee, 0xd8, 0xf8, 0xe9, 0x6f, 0xf3, 0x73, 0x7c, 0xcf, 0xcf, 0x77,
	0x70, 0xf8, 0x41, 0x16, 0xa6, 0x25, 0xa0, 0x18, 0x88, 0x9b, 0x7f, 0x84, 0xe7, 0x5d, 0x83, 0x95,
	0x31, 0xf4, 0x0d, 0x8c, 0x64, 0x59, 0x08, 0x08, 0x73, 0xa3, 0x07, 0xa7, 0xfb, 0x93, 0x34, 0x93,
	0x93, 0xb6, 0x8f, 0x15, 0xe8, 0xf4, 0xa7, 0x0b, 0x7b, 0x6b, 0x4d, 0x7a, 0x0b, 0xe3, 0x3a, 0x6a,
	0xfa, 0xd2, 0xce, 0x0e, 0xdc, 0xcc, 0xf0, 0xd5, 0x00, 0xaa, 0x0e, 0xec, 0xf5, 0x8f, 0xbf, 0xff,
	0x7e, 0x39, 0x8c, 0x3f, 0xb3, 0x1f, 0x81, 0xc0, 0x2b, 0x39, 0xc3, 0x22, 0xbe, 0xae, 0x74, 0xdd,
	0xc4, 0x76, 0xfa, 0x3d, 0x39, 0xa1, 0xb7, 0xe0, 0x57, 0xd9, 0xd7, 0xf4, 0x03, 0x77, 0x2a, 0xdc,
	0x8a, 0x6a, 0xb1, 0x47, 0x96, 0x9d, 0x9f, 0xb0, 0x1e, 0xf6, 0xf8, 0x5a, 0x8a, 0x1b, 0x6a, 0xc0,
	0x2b, 0x1d, 0xa6, 0xdc, 0xee, 0xed, 0x4d, 0x29, 0x3c, 0xee, 0xc5, 0xd4, 0xd4, 0xc7, 0x96, 0xfa,
	0x90, 0xf6, 0x09, 0xff, 0xea, 0xdb, 0x3f, 0xc1, 0xdb, 0xff, 0x01, 0x00, 0x00, 0xff, 0xff, 0x0d,
	0xf7, 0x90, 0x86, 0x43, 0x04, 0x00, 0x00,
}
